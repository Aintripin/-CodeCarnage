self["webpackHotUpdateproduction_project"]("shared-ui-Button-Button-stories",{

/***/ "./src/shared/ui/Button/Button.stories.tsx":
/*!*************************************************!*\
  !*** ./src/shared/ui/Button/Button.stories.tsx ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "Primary": () => (/* binding */ Primary),
/* harmony export */   "Secondary": () => (/* binding */ Secondary),
/* harmony export */   "Large": () => (/* binding */ Large),
/* harmony export */   "Small": () => (/* binding */ Small),
/* harmony export */   "__namedExportsOrder": () => (/* binding */ __namedExportsOrder)
/* harmony export */ });
/* harmony import */ var _storybook_test__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @storybook/test */ "./node_modules/@storybook/test/dist/index.mjs");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ "./src/shared/ui/Button/Button.tsx");


// More on how to set up stories at: https://storybook.js.org/docs/writing-stories#default-export
const meta = {
  title: 'Example/Button',
  component: _Button__WEBPACK_IMPORTED_MODULE_1__.Button,
  parameters: {
    // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/configure/story-layout
    layout: 'centered'
  },
  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs
  tags: ['autodocs'],
  // More on argTypes: https://storybook.js.org/docs/api/argtypes
  argTypes: {
    backgroundColor: {
      control: 'color'
    }
  },
  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args
  args: {
    onClick: (0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
// More on writing stories with args: https://storybook.js.org/docs/writing-stories/args
const Primary = {
  args: {
    primary: true,
    label: 'Button'
  }
};
const Secondary = {
  args: {
    label: 'Button'
  }
};
const Large = {
  args: {
    size: 'large',
    label: 'Button'
  }
};
const Small = {
  args: {
    size: 'small',
    label: 'Button'
  }
};
;
const __namedExportsOrder = ["Primary", "Secondary", "Large", "Small"];
Primary.parameters = {
  ...Primary.parameters,
  docs: {
    ...Primary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    primary: true,\n    label: 'Button'\n  }\n}",
      ...Primary.parameters?.docs?.source
    }
  }
};
Secondary.parameters = {
  ...Secondary.parameters,
  docs: {
    ...Secondary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Button'\n  }\n}",
      ...Secondary.parameters?.docs?.source
    }
  }
};
Large.parameters = {
  ...Large.parameters,
  docs: {
    ...Large.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    size: 'large',\n    label: 'Button'\n  }\n}",
      ...Large.parameters?.docs?.source
    }
  }
};
Small.parameters = {
  ...Small.parameters,
  docs: {
    ...Small.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    size: 'small',\n    label: 'Button'\n  }\n}",
      ...Small.parameters?.docs?.source
    }
  }
};

/***/ }),

/***/ "./src/shared/ui/Button/Button.tsx":
/*!*****************************************!*\
  !*** ./src/shared/ui/Button/Button.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ThemeButton": () => (/* binding */ ThemeButton),
/* harmony export */   "Button": () => (/* binding */ Button)
/* harmony export */ });
Object(function webpackMissingModule() { var e = new Error("Cannot find module 'shared/lib/classNames/classNames'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* harmony import */ var _Button_module_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button.module.scss */ "./src/shared/ui/Button/Button.module.scss");
/* harmony import */ var _Button_module_scss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Button_module_scss__WEBPACK_IMPORTED_MODULE_1__);


var ThemeButton = /*#__PURE__*/ function(ThemeButton) {
    ThemeButton["CLEAR"] = "clear";
    return ThemeButton;
}({});
const Button = (props)=>{
    const { className, children, theme, ...otherProps } = props;
    return /*#__PURE__*/ React.createElement("button", {
        type: "button",
        className: Object(function webpackMissingModule() { var e = new Error("Cannot find module 'shared/lib/classNames/classNames'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())((_Button_module_scss__WEBPACK_IMPORTED_MODULE_1___default().Button), {
            [(_Button_module_scss__WEBPACK_IMPORTED_MODULE_1___default())[theme]]: true
        }, [
            className
        ]),
        ...otherProps
    }, children);
};
Button.__docgenInfo = {
    "description": "",
    "methods": [],
    "displayName": "Button",
    "props": {
        "className": {
            "required": false,
            "tsType": {
                "name": "string"
            },
            "description": ""
        },
        "theme": {
            "required": false,
            "tsType": {
                "name": "ThemeButton"
            },
            "description": ""
        }
    },
    "composes": [
        "ButtonHTMLAttributes"
    ]
};


/***/ }),

/***/ "./src/shared/ui/Button/Button.module.scss":
/*!*************************************************!*\
  !*** ./src/shared/ui/Button/Button.module.scss ***!
  \*************************************************/
/***/ (() => {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> .Button {\n|     cursor: pointer;\n|     color: var(--primary-color);");

/***/ })

});
//# sourceMappingURL=shared-ui-Button-Button-stories.fe9928e8778a2b98afe1.hot-update.js.map